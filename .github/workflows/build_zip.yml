name: Build Pi image

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      deb-url:
        description: 'URL for Kolibri deb file'
        required: true
  workflow_call:
    inputs:
      deb-file-name:
        required: false
        type: string
      deb-url:
        description: 'URL for Kolibri deb file'
        required: false
        type: string
      ref:
        description: 'A ref for this workflow to check out its own repo'
        required: false
        type: string
    outputs:
      zip-file-name:
        description: "ZIP file name"
        value: ${{ jobs.build_zip.outputs.zip-file-name }}

jobs:
  build_zip:
    name: Build Pi image
    runs-on: ubuntu-latest
    outputs:
      zip-file-name: ${{ steps.get-zip-filename.outputs.zip-file-name }}
    steps:
    - name: Validate deb reference inputs
      if: ${{ (inputs.deb-file-name && inputs.deb-url) || (!inputs.deb-file-name && !inputs.deb-url) }}
      run: |
        echo "Must specify only one reference for the deb file to build the image with."
        exit 1
    - uses: actions/checkout@v4
      if: ${{ !inputs.ref }}
    - uses: actions/checkout@v4
      if: ${{ inputs.ref }}
      with:
        repository: learningequality/pi-gen
        ref: ${{ inputs.ref }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Download the debfile from URL and install
      if: ${{ inputs.deb-url }}
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-user-static
    - name: Download the debfile from URL and install
      if: ${{ inputs.deb-url }}
      run: make get-deb deb=${{ inputs.deb-url }}
    - name: Download the debfile from artifacts
      if: ${{ inputs.deb-file-name }}
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.deb-file-name }}
        path: dist
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build the pi image
      run: ./build-docker.sh
    - name: Rename the pi image and zip file
      run: make rename-zip
    - name: Get ZIP filename
      id: get-zip-filename
      run: echo "zip-file-name=$(ls deploy | grep .zip | cat)" >> $GITHUB_OUTPUT
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.get-zip-filename.outputs.zip-file-name }}
        path: deploy/${{ steps.get-zip-filename.outputs.zip-file-name }}
